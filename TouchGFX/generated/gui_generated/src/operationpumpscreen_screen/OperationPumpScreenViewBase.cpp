/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/operationpumpscreen_screen/OperationPumpScreenViewBase.hpp>
#include <touchgfx/Color.hpp>
#include "BitmapDatabase.hpp"
#include <texts/TextKeysAndLanguages.hpp>

OperationPumpScreenViewBase::OperationPumpScreenViewBase() :
    buttonCallback(this, &OperationPumpScreenViewBase::buttonCallbackHandler)
{

    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);

    background.setPosition(0, 0, 800, 480);
    background.setColor(touchgfx::Color::getColorFrom24BitRGB(41, 73, 105));

    toolbar.setPosition(0, 0, 800, 62);
    toolbar.setColor(touchgfx::Color::getColorFrom24BitRGB(145, 145, 145));

    logo.setBitmap(touchgfx::Bitmap(BITMAP_CONTROLGAS_ID));
    logo.setPosition(0, 1, 153, 60);
    logo.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);

    btn_dispache.setXY(616, 128);
    btn_dispache.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_PRESSED_ID));
    btn_dispache.setLabelText(touchgfx::TypedText(T_SINGLEUSEID68));
    btn_dispache.setLabelColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    btn_dispache.setLabelColorPressed(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    btn_dispache.setAction(buttonCallback);

    bth_stop.setXY(616, 232);
    bth_stop.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_PRESSED_ID));
    bth_stop.setLabelText(touchgfx::TypedText(T_SINGLEUSEID69));
    bth_stop.setLabelColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    bth_stop.setLabelColorPressed(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    bth_stop.setAction(buttonCallback);

    btn_cancel.setXY(400, 232);
    btn_cancel.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_PRESSED_ID));
    btn_cancel.setLabelText(touchgfx::TypedText(T_SINGLEUSEID70));
    btn_cancel.setLabelColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    btn_cancel.setLabelColorPressed(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    btn_cancel.setAction(buttonCallback);

    status_operation.setXY(141, 158);
    status_operation.setProgressIndicatorPosition(0, 0, 104, 104);
    status_operation.setRange(0, 100);
    status_operation.setCenter(52, 52);
    status_operation.setRadius(50);
    status_operation.setLineWidth(0);
    status_operation.setStartEndAngle(0, 360);
    status_operation.setBackground(touchgfx::Bitmap(BITMAP_BLUE_PROGRESSINDICATORS_BG_MEDIUM_CIRCLE_INDICATOR_BG_LINE_FULL_ID));
    status_operationPainter.setBitmap(touchgfx::Bitmap(BITMAP_BLUE_PROGRESSINDICATORS_FILL_MEDIUM_CIRCLE_INDICATOR_FILL_LINE_FULL_ID));
    status_operation.setPainter(status_operationPainter);
    status_operation.setValue(0);

    btn_pay_sale.setXY(400, 128);
    btn_pay_sale.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_PRESSED_ID));
    btn_pay_sale.setLabelText(touchgfx::TypedText(T_SINGLEUSEID71));
    btn_pay_sale.setLabelColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    btn_pay_sale.setLabelColorPressed(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    btn_pay_sale.setAction(buttonCallback);

    lbl_title.setXY(16, 342);
    lbl_title.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    lbl_title.setLinespacing(0);
    Unicode::snprintf(lbl_titleBuffer, LBL_TITLE_SIZE, "%s", touchgfx::TypedText(T_SINGLEUSEID73).getText());
    lbl_title.setWildcard(lbl_titleBuffer);
    lbl_title.resizeToCurrentText();
    lbl_title.setTypedText(touchgfx::TypedText(T_SINGLEUSEID72));

    lbl_status_operation.setXY(438, 342);
    lbl_status_operation.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    lbl_status_operation.setLinespacing(0);
    lbl_status_operationBuffer[0] = 0;
    lbl_status_operation.setWildcard(lbl_status_operationBuffer);
    lbl_status_operation.resizeToCurrentText();
    lbl_status_operation.setTypedText(touchgfx::TypedText(T_SINGLEUSEID74));

    add(background);
    add(toolbar);
    add(logo);
    add(btn_dispache);
    add(bth_stop);
    add(btn_cancel);
    add(status_operation);
    add(btn_pay_sale);
    add(lbl_title);
    add(lbl_status_operation);
}

void OperationPumpScreenViewBase::setupScreen()
{

}

void OperationPumpScreenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &btn_dispache)
    {
        //Dispache_fuel
        //When btn_dispache clicked call virtual function
        //Call dispache_fuel_action
        dispache_fuel_action();
    }
    else if (&src == &bth_stop)
    {
        //Stop_dispache
        //When bth_stop clicked call virtual function
        //Call stop_dispache_action
        stop_dispache_action();
    }
    else if (&src == &btn_cancel)
    {
        //Cancel_sale
        //When btn_cancel clicked call virtual function
        //Call cancel_sale_action
        cancel_sale_action();
    }
    else if (&src == &btn_pay_sale)
    {
        //Pay_sale
        //When btn_pay_sale clicked call virtual function
        //Call pay_sale_action
        pay_sale_action();
    }
}
