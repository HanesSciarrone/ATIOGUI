/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef SETUPMQTTSCREENVIEWBASE_HPP
#define SETUPMQTTSCREENVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/setupmqttscreen_screen/SetupMQTTScreenPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/ScalableImage.hpp>
#include <touchgfx/widgets/ToggleButton.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/widgets/RadioButton.hpp>
#include <touchgfx/widgets/BoxWithBorder.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/widgets/ButtonWithLabel.hpp>
#include <touchgfx/widgets/Image.hpp>
#include <touchgfx/widgets/ButtonWithIcon.hpp>
#include <touchgfx/containers/ModalWindow.hpp>
#include <touchgfx/Color.hpp>
#include <touchgfx/widgets/RadioButtonGroup.hpp>
#include <touchgfx/mixins/ClickListener.hpp>

class SetupMQTTScreenViewBase : public touchgfx::View<SetupMQTTScreenPresenter>
{
public:
    SetupMQTTScreenViewBase();
    virtual ~SetupMQTTScreenViewBase() {}
    virtual void setupScreen();

    /*
     * Virtual Action Handlers
     */
    virtual void Increase_keep_alive_mqtt()
    {
        // Override and implement this function in SetupMQTTScreen
    }

    virtual void Decrease_keep_alive_mqtt()
    {
        // Override and implement this function in SetupMQTTScreen
    }

    virtual void set_version_mqtt()
    {
        // Override and implement this function in SetupMQTTScreen
    }

    virtual void set_qos_mqtt()
    {
        // Override and implement this function in SetupMQTTScreen
    }

    virtual void fill_text_area_buffer()
    {
        // Override and implement this function in SetupMQTTScreen
    }

    virtual void configure_parameters_mqtt()
    {
        // Override and implement this function in SetupMQTTScreen
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box Background;
    touchgfx::Box ToolBar;
    touchgfx::ScalableImage logo;
    touchgfx::ToggleButton BtnVersionMQTT;
    touchgfx::TextArea label_version_mqtt;
    touchgfx::RadioButton BtnQoS_0;
    touchgfx::RadioButton BtnQoS_1;
    touchgfx::RadioButton BtnQoS_2;
    touchgfx::TextArea TxtQoS_0;
    touchgfx::TextArea TxtQoS_1;
    touchgfx::TextArea TxtQoS_2;
    touchgfx::TextArea Title_Client_id;
    touchgfx::BoxWithBorder Background_Client_id;
    touchgfx::TextArea Title_publish_topic;
    touchgfx::BoxWithBorder Background_publish_topic;
    touchgfx::ClickListener< touchgfx::TextAreaWithOneWildcard > Client_id;
    touchgfx::TextArea Title_suscribe_topic;
    touchgfx::BoxWithBorder Background_suscribe_topic;
    touchgfx::ClickListener< touchgfx::TextAreaWithOneWildcard > Publish_topic;
    touchgfx::ButtonWithLabel Btn_OK;
    touchgfx::Image Backgrount_keepalive;
    touchgfx::ClickListener< touchgfx::TextAreaWithOneWildcard > Suscribe_topic;
    touchgfx::TextAreaWithOneWildcard Keep_alive;
    touchgfx::TextArea textArea1;
    touchgfx::ButtonWithIcon Btn_Increase_keepalive;
    touchgfx::ModalWindow Pop_up;
    touchgfx::ButtonWithLabel btn_pop_up_ok;
    touchgfx::ButtonWithLabel btn_pop_up_cancel;
    touchgfx::ButtonWithIcon Btn_Decrease_keepalive;
    touchgfx::RadioButtonGroup<3> radioButtonGroup1;

    /*
     * Wildcard Buffers
     */
    static const uint16_t CLIENT_ID_SIZE = 26;
    touchgfx::Unicode::UnicodeChar Client_idBuffer[CLIENT_ID_SIZE];
    static const uint16_t PUBLISH_TOPIC_SIZE = 26;
    touchgfx::Unicode::UnicodeChar Publish_topicBuffer[PUBLISH_TOPIC_SIZE];
    static const uint16_t SUSCRIBE_TOPIC_SIZE = 26;
    touchgfx::Unicode::UnicodeChar Suscribe_topicBuffer[SUSCRIBE_TOPIC_SIZE];
    static const uint16_t KEEP_ALIVE_SIZE = 9;
    touchgfx::Unicode::UnicodeChar Keep_aliveBuffer[KEEP_ALIVE_SIZE];

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<SetupMQTTScreenViewBase, const touchgfx::AbstractButton&> buttonCallback;
    touchgfx::Callback<SetupMQTTScreenViewBase, const touchgfx::AbstractButton&> radioButtonSelectedCallback;

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);
    void radioButtonSelectedCallbackHandler(const touchgfx::AbstractButton& src);

};

#endif // SETUPMQTTSCREENVIEWBASE_HPP
