/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef OPERATIONPUMPSCREENVIEWBASE_HPP
#define OPERATIONPUMPSCREENVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/operationpumpscreen_screen/OperationPumpScreenPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/ScalableImage.hpp>
#include <touchgfx/widgets/ButtonWithLabel.hpp>
#include <touchgfx/containers/progress_indicators/CircleProgress.hpp>
#include <touchgfx/widgets/canvas/PainterRGB888Bitmap.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>

class OperationPumpScreenViewBase : public touchgfx::View<OperationPumpScreenPresenter>
{
public:
    OperationPumpScreenViewBase();
    virtual ~OperationPumpScreenViewBase() {}
    virtual void setupScreen();

    /*
     * Virtual Action Handlers
     */
    virtual void pay_sale_action()
    {
        // Override and implement this function in OperationPumpScreen
    }

    virtual void cancel_sale_action()
    {
        // Override and implement this function in OperationPumpScreen
    }

    virtual void dispache_fuel_action()
    {
        // Override and implement this function in OperationPumpScreen
    }

    virtual void stop_dispache_action()
    {
        // Override and implement this function in OperationPumpScreen
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box background;
    touchgfx::Box toolbar;
    touchgfx::ScalableImage logo;
    touchgfx::ButtonWithLabel btn_dispache;
    touchgfx::ButtonWithLabel bth_stop;
    touchgfx::ButtonWithLabel btn_cancel;
    touchgfx::CircleProgress status_operation;
    touchgfx::PainterRGB888Bitmap status_operationPainter;
    touchgfx::ButtonWithLabel btn_pay_sale;
    touchgfx::TextAreaWithOneWildcard lbl_title;
    touchgfx::TextAreaWithOneWildcard lbl_status_operation;

    /*
     * Wildcard Buffers
     */
    static const uint16_t LBL_TITLE_SIZE = 20;
    touchgfx::Unicode::UnicodeChar lbl_titleBuffer[LBL_TITLE_SIZE];
    static const uint16_t LBL_STATUS_OPERATION_SIZE = 20;
    touchgfx::Unicode::UnicodeChar lbl_status_operationBuffer[LBL_STATUS_OPERATION_SIZE];

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<OperationPumpScreenViewBase, const touchgfx::AbstractButton&> buttonCallback;

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);

    /*
     * Canvas Buffer Size
     */
    static const uint16_t CANVAS_BUFFER_SIZE = 12000;
    uint8_t canvasBuffer[CANVAS_BUFFER_SIZE];
};

#endif // OPERATIONPUMPSCREENVIEWBASE_HPP
