/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef INPUTSALESCREENVIEWBASE_HPP
#define INPUTSALESCREENVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/inputsalescreen_screen/InputSaleScreenPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/ScalableImage.hpp>
#include <gui/containers/PadNumeric.hpp>
#include <touchgfx/widgets/ButtonWithLabel.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>

class InputSaleScreenViewBase : public touchgfx::View<InputSaleScreenPresenter>
{
public:
    InputSaleScreenViewBase();
    virtual ~InputSaleScreenViewBase() {}
    virtual void setupScreen();

    /*
     * Virtual Action Handlers
     */
    virtual void sent_dispatch_operation()
    {
        // Override and implement this function in InputSaleScreen
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box backgroud;
    touchgfx::Box tool_bar;
    touchgfx::ScalableImage logo;
    PadNumeric pad_numeric;
    touchgfx::ButtonWithLabel button_accept_operation;
    touchgfx::ButtonWithLabel button_cancel_operation;
    touchgfx::TextAreaWithOneWildcard label_title;

    /*
     * Wildcard Buffers
     */
    static const uint16_t LABEL_TITLE_SIZE = 20;
    touchgfx::Unicode::UnicodeChar label_titleBuffer[LABEL_TITLE_SIZE];

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<InputSaleScreenViewBase, const touchgfx::AbstractButton&> buttonCallback;

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);

};

#endif // INPUTSALESCREENVIEWBASE_HPP
